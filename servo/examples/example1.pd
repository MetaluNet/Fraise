#N canvas 72 251 862 565 10;
#X declare -stdpath Fraise;
#X obj 19 141 fruit/fruit 1 fruit1 10 example1;
#X obj 235 331 fruit/send2 fruit1;
#X obj 21 38 pied/pied 0 41424;
#X floatatom 536 199 8 0 0 0 - - -, f 8;
#X obj 539 139 hsl 128 15 3500 18000 0 0 empty empty empty -2 -8 0
10 -262144 -1 -1 0 1;
#X msg 536 222 c 20 c 1 i \$1;
#X text 206 40 Output RC servo waveforms to K11 (channel 0) and K12
(channel 1).;
#X text 209 20 RC servo example for Versa1.0;
#X text 543 180 position of servo channel 1 \, in 1/8 us steps.;
#X floatatom 235 201 8 0 0 0 - - -, f 8;
#X obj 238 141 hsl 128 15 3500 18000 0 0 empty empty empty -2 -8 0
10 -262144 -1 -1 0 1;
#X text 239 183 position of servo channel 1 \, in 1/8 us steps.;
#X text 307 106 example range 4000 to 16000 = 0.5 ms to 2 ms (adjust
the ranges for your servos and mechanical assembly);
#X msg 235 224 c 20 c 0 i \$1;
#X obj 511 343 fruit/receive fruit1;
#X msg 514 295 c 20 c 254 c 1;
#X obj 511 363 route 20;
#X obj 511 384 route 0 1;
#X msg 514 272 c 20 c 254 c 0;
#X floatatom 511 418 8 0 0 3 pos_0 - -, f 8;
#X floatatom 571 418 8 0 0 3 pos_1 - -, f 8;
#X text 205 65 Here main servo channel is set to 20 in firmware (see
example1/main.c).;
#X text 607 272 get current pos of servo 0;
#X text 607 295 get current pos of servo 1;
#X text 566 364 Receive requested channel positions.;
#X obj 22 6 declare -stdpath Fraise;
#X connect 3 0 5 0;
#X connect 4 0 3 0;
#X connect 5 0 1 0;
#X connect 9 0 13 0;
#X connect 10 0 9 0;
#X connect 13 0 1 0;
#X connect 14 0 16 0;
#X connect 15 0 1 0;
#X connect 16 0 17 0;
#X connect 17 0 19 0;
#X connect 17 1 20 0;
#X connect 18 0 1 0;
